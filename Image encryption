from PIL import Image
import numpy as np

print("------------- Image Encryption Tool --------------")

def encrypt_image(image_path, key):
    try:
        original_image = Image.open(image_path)
    except FileNotFoundError:
        print(f"Error: Image file '{image_path}' not found.")
        return
    
    image_array = np.array(original_image, dtype=np.uint16)  # Use uint16 to prevent overflow
    encrypted_image_array = np.clip((image_array * key) // (key + 1), 0, 255).astype(np.uint8)
    encrypted_image = Image.fromarray(encrypted_image_array)
    
    encrypted_image_path = "encrypted_image.png"
    encrypted_image.save(encrypted_image_path)
    print(f"Image encrypted successfully. Encrypted image saved at: {encrypted_image_path}")

def get_valid_key(prompt):
    while True:
        try:
            key = int(input(prompt))
            return key
        except ValueError:
            print("Invalid input. Please enter a valid integer key.")

def encrypt_choice():
    key = get_valid_key("Enter encryption key: ")
    image_location = input("Enter the location of the image: ")

    encrypt_image(image_location, key)

def main():
    while True:
        print("Select an option:")
        print("e - Encrypt image")
        print("d - Decrypt image")
        print("q - Quit")
        choice = input("Your choice: ")

        if choice == 'e':
            encrypt_choice()
        elif choice == 'd':
            # Add decryption logic here if needed
            print("Decryption option is not implemented yet.")
        elif choice == 'q':
            print("Exiting the program.")
            break
        else:
            print("Invalid choice. Please choose 'e' for encryption, 'd' for decryption, or 'q' to quit.")

if __name__ == "__main__":
    main()
